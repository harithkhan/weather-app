{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/style.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack:///./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack:///./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack:///./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack:///./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack:///./src/img/dynamic-icons/ sync nonrecursive \\.(png%7Cjpe","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/nonce","webpack:///./src/style.css?7163","webpack:///./src/logic/weather-api.js","webpack:///./src/logic/temp-format.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/formatDistance.js","webpack:///./node_modules/date-fns/locale/_lib/buildFormatLongFn.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/formatLong.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/formatRelative.js","webpack:///./node_modules/date-fns/locale/_lib/buildLocalizeFn.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/localize.js","webpack:///./node_modules/date-fns/locale/_lib/buildMatchFn.js","webpack:///./node_modules/date-fns/locale/en-US/_lib/match.js","webpack:///./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","webpack:///./node_modules/date-fns/locale/en-US.js","webpack:///./node_modules/date-fns/_lib/format/longFormatters.js","webpack:///./node_modules/date-fns/_lib/protectedTokens.js","webpack:///./node_modules/date-fns/constants.js","webpack:///./node_modules/date-fns/constructFrom.js","webpack:///./node_modules/date-fns/_lib/defaultOptions.js","webpack:///./node_modules/date-fns/toDate.js","webpack:///./node_modules/date-fns/parse/_lib/Setter.js","webpack:///./node_modules/date-fns/transpose.js","webpack:///./node_modules/date-fns/parse/_lib/Parser.js","webpack:///./node_modules/date-fns/parse/_lib/constants.js","webpack:///./node_modules/date-fns/parse/_lib/utils.js","webpack:///./node_modules/date-fns/startOfWeek.js","webpack:///./node_modules/date-fns/getWeekYear.js","webpack:///./node_modules/date-fns/startOfISOWeek.js","webpack:///./node_modules/date-fns/getWeek.js","webpack:///./node_modules/date-fns/startOfWeekYear.js","webpack:///./node_modules/date-fns/getISOWeekYear.js","webpack:///./node_modules/date-fns/getISOWeek.js","webpack:///./node_modules/date-fns/startOfISOWeekYear.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/DateParser.js","webpack:///./node_modules/date-fns/addDays.js","webpack:///./node_modules/date-fns/setDay.js","webpack:///./node_modules/date-fns/setISODay.js","webpack:///./node_modules/date-fns/getISODay.js","webpack:///./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","webpack:///./node_modules/date-fns/parse/_lib/parsers.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/EraParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/YearParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/QuarterParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/MonthParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js","webpack:///./node_modules/date-fns/setWeek.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js","webpack:///./node_modules/date-fns/setISOWeek.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/DayParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/ISODayParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/AMPMParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/MinuteParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/SecondParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js","webpack:///./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js","webpack:///./node_modules/date-fns/parse.js","webpack:///./node_modules/date-fns/getDefaultOptions.js","webpack:///./node_modules/date-fns/startOfDay.js","webpack:///./node_modules/date-fns/getDayOfYear.js","webpack:///./node_modules/date-fns/differenceInCalendarDays.js","webpack:///./node_modules/date-fns/_lib/normalizeDates.js","webpack:///./node_modules/date-fns/startOfYear.js","webpack:///./node_modules/date-fns/_lib/addLeadingZeros.js","webpack:///./node_modules/date-fns/_lib/format/lightFormatters.js","webpack:///./node_modules/date-fns/_lib/format/formatters.js","webpack:///./node_modules/date-fns/isValid.js","webpack:///./node_modules/date-fns/isDate.js","webpack:///./node_modules/date-fns/format.js","webpack:///./src/logic/format-time.js","webpack:///./src/logic/parse-weather-data.js","webpack:///./src/display/build-current-weather-display.js","webpack:///./src/display/display-hourly-weather.js","webpack:///./src/display/build-hourly-weather-display.js","webpack:///./src/display/search-form.js","webpack:///./src/display/loading-gif.js","webpack:///./src/display/display-current-weather.js","webpack:///./src/display/display-from-hour.js","webpack:///./src/display/display-error.js","webpack:///./src/display/toggle-temp-button.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Fredoka:wght@300..700&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* CSS Reset */\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\n* {\n    margin: 0;\n}\n\nbody {\n    line-height: 1.5;\n    -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n    display: block;\n    max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n    font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    overflow-wrap: break-word;\n}\n\np {\n    text-wrap: pretty;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    text-wrap: balance;\n}\n\n#root,\n#__next {\n    isolation: isolate;\n}\n/* Reset Over */\n/* General Styling */\n:root {\n    --blue-one: #eff9ff;\n    --blue-two: #e0f2fe;\n    --blue-three: #b8e6ff;\n    --blue-four: #73d4ff;\n    --blue-five: #00bcff;\n    --blue-six: #00a6f5;\n    --blue-seven: #0084d1;\n    --blue-eight: #0069a8;\n    --blue-nine: #00598a;\n    --blue-ten: #004a70;\n    --blue-eleven: #062f4a;\n    --font-header: \"Fredoka\", -apple-system, \"Inter\", Arial, Helvetica,\n        sans-serif;\n    --font-general: -apple-system, \"Inter\", Arial, Helvetica, sans-serif;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: var(--font-general);\n}\n\n/* App Styling */\n.app-container {\n    width: 40rem;\n    min-height: 14rem;\n    margin-top: 3rem;\n    margin-bottom: 2rem;\n    padding: 2rem;\n    border-radius: 20px;\n    background-color: var(--blue-ten);\n    box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);\n}\n\nheader {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n}\n\n.header-icon {\n    margin-left: -2rem;\n}\n\nheader > h1 {\n    font-family: var(--font-header);\n    font-weight: 500;\n    color: white;\n}\n\nmain {\n    margin-top: 2rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2rem;\n}\n\n/* Form Section */\n.form-section {\n    display: flex;\n    align-items: center;\n}\n\n#search {\n    padding-left: 1rem;\n    padding-right: 1rem;\n    border-radius: 16px;\n    border: none;\n    height: 2rem;\n    width: 16rem;\n    font-weight: 600;\n}\n\n#search:focus {\n    outline: none;\n}\n\n.toggle-temp-format {\n    margin-left: 10px;\n}\n\n.switch {\n    position: relative;\n    display: inline-block;\n    width: 50px;\n    height: 25px;\n}\n\n.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n}\n\n.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: red;\n    transition: 0.4s;\n    border-radius: 25px;\n}\n\n.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 18px;\n    width: 18px;\n    left: 4px;\n    bottom: 3px;\n    background-color: white;\n    transition: 0.4s;\n    border-radius: 50%;\n}\n\ninput:checked + .slider {\n    background-color: #4caf50;\n}\n\ninput:checked + .slider:before {\n    transform: translateX(24px);\n}\n\n.slider.round {\n    border-radius: 25px;\n}\n\n.slider.round:before {\n    border-radius: 50%;\n}\n\n#unitLabel {\n    font-size: 18px;\n    font-weight: bold;\n}\n\n/* Current Weather */\n.current-weather {\n    width: 34rem;\n    min-height: 2rem;\n    display: grid;\n    color: white;\n    align-items: center;\n    font-weight: 600;\n}\n\n#loading-container {\n    justify-self: center;\n}\n\n.giphy-embed {\n    border-radius: 25px;\n}\n\n.current-weather-error {\n    justify-self: center;\n}\n\n.grid-on {\n    grid-template-rows: repeat(6, 2.5rem);\n    grid-template-columns: 7.5rem repeat(3, 1fr);\n}\n\n.current-icon-container {\n    grid-area: 1 / 1 / 4 / 2;\n    justify-self: center;\n    width: 100%;\n    height: 100%;\n    padding-right: 10px;\n    padding-bottom: 20px;\n}\n\n.current-icon {\n    width: 100%;\n    height: auto;\n}\n\n.location-container {\n    grid-area: 1 / 2 / 2 / -1;\n    font-weight: 700;\n}\n\n.temp-container {\n    grid-area: 2 / 2 / 3 / 3;\n    font-size: 2rem;\n    font-weight: 700;\n}\n\n.feels-like-container {\n    grid-area: 2 / 3 / 3 / -1;\n}\n\n.humidity-container {\n    grid-area: 3 / 2 / 3 / 3;\n}\n\n.precip-container {\n    grid-area: 3 / 3 / 3 / 4;\n}\n\n.uvindex-container {\n    grid-area: 3 / 4 / 4 / -1;\n}\n\n.conditions-container {\n    grid-area: 4 / 1 / 5 / -1;\n}\n\n.description-container {\n    grid-area: 5 / 1 / 6 / -1;\n    line-height: 1.2;\n}\n\n.sunrise-container {\n    grid-area: 6 / 1 / -1 / 3;\n}\n\n.sunset-container {\n    grid-area: 6 / 3 / -1 / -1;\n}\n\n.hourly-weather {\n    min-width: 34rem;\n    min-height: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    font-weight: 500;\n}\n\n.hidden {\n    display: none;\n}\n\n#left-button {\n    margin-right: 1.5rem;\n    transition: scale 0.3s ease;\n}\n\n#right-button {\n    margin-left: 1.5rem;\n    transition: scale 0.3s ease;\n}\n\n#left-button:hover,\n#right-button:hover {\n    scale: 1.2;\n}\n\n.carousel-button {\n    width: 6rem;\n    background-color: inherit;\n    border: none;\n    cursor: pointer;\n}\n\n.arrow-icon {\n    background-color: inherit;\n}\n\n.carousel-frame {\n    width: 20rem;\n    height: 10rem;\n    overflow: hidden;\n    position: relative;\n}\n\n.carousel {\n    display: flex;\n    overflow: hidden;\n    position: relative;\n    width: 160rem;\n    right: 0rem;\n}\n\n.hour-container {\n    width: 6.66rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    font-weight: 600;\n}\n\n.hour-icon {\n    width: 6.66rem;\n    height: 6rem;\n}\n\n/* Footer */\nfooter {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-bottom: 2rem;\n    font-weight: 500;\n}\n\n.credit {\n    display: flex;\n    gap: 0.3rem;\n}\n\nfooter a {\n    text-decoration: none;\n    color: var(--blue-ten);\n    transition: color 0.3s ease;\n}\n\nfooter a:hover {\n    color: var(--blue-five);\n}\n\n.credit img {\n    height: 1.2rem;\n    width: 1.2rem;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import url(\\\"https://fonts.googleapis.com/css2?family=Fredoka:wght@300..700&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap\\\");\\n/* CSS Reset */\\n*,\\n*::before,\\n*::after {\\n    box-sizing: border-box;\\n}\\n\\n* {\\n    margin: 0;\\n}\\n\\nbody {\\n    line-height: 1.5;\\n    -webkit-font-smoothing: antialiased;\\n}\\n\\nimg,\\npicture,\\nvideo,\\ncanvas,\\nsvg {\\n    display: block;\\n    max-width: 100%;\\n}\\n\\ninput,\\nbutton,\\ntextarea,\\nselect {\\n    font: inherit;\\n}\\n\\np,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n    overflow-wrap: break-word;\\n}\\n\\np {\\n    text-wrap: pretty;\\n}\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n    text-wrap: balance;\\n}\\n\\n#root,\\n#__next {\\n    isolation: isolate;\\n}\\n/* Reset Over */\\n/* General Styling */\\n:root {\\n    --blue-one: #eff9ff;\\n    --blue-two: #e0f2fe;\\n    --blue-three: #b8e6ff;\\n    --blue-four: #73d4ff;\\n    --blue-five: #00bcff;\\n    --blue-six: #00a6f5;\\n    --blue-seven: #0084d1;\\n    --blue-eight: #0069a8;\\n    --blue-nine: #00598a;\\n    --blue-ten: #004a70;\\n    --blue-eleven: #062f4a;\\n    --font-header: \\\"Fredoka\\\", -apple-system, \\\"Inter\\\", Arial, Helvetica,\\n        sans-serif;\\n    --font-general: -apple-system, \\\"Inter\\\", Arial, Helvetica, sans-serif;\\n}\\n\\nbody {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    font-family: var(--font-general);\\n}\\n\\n/* App Styling */\\n.app-container {\\n    width: 40rem;\\n    min-height: 14rem;\\n    margin-top: 3rem;\\n    margin-bottom: 2rem;\\n    padding: 2rem;\\n    border-radius: 20px;\\n    background-color: var(--blue-ten);\\n    box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.5);\\n}\\n\\nheader {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 1rem;\\n}\\n\\n.header-icon {\\n    margin-left: -2rem;\\n}\\n\\nheader > h1 {\\n    font-family: var(--font-header);\\n    font-weight: 500;\\n    color: white;\\n}\\n\\nmain {\\n    margin-top: 2rem;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 2rem;\\n}\\n\\n/* Form Section */\\n.form-section {\\n    display: flex;\\n    align-items: center;\\n}\\n\\n#search {\\n    padding-left: 1rem;\\n    padding-right: 1rem;\\n    border-radius: 16px;\\n    border: none;\\n    height: 2rem;\\n    width: 16rem;\\n    font-weight: 600;\\n}\\n\\n#search:focus {\\n    outline: none;\\n}\\n\\n.toggle-temp-format {\\n    margin-left: 10px;\\n}\\n\\n.switch {\\n    position: relative;\\n    display: inline-block;\\n    width: 50px;\\n    height: 25px;\\n}\\n\\n.switch input {\\n    opacity: 0;\\n    width: 0;\\n    height: 0;\\n}\\n\\n.slider {\\n    position: absolute;\\n    cursor: pointer;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background-color: red;\\n    transition: 0.4s;\\n    border-radius: 25px;\\n}\\n\\n.slider:before {\\n    position: absolute;\\n    content: \\\"\\\";\\n    height: 18px;\\n    width: 18px;\\n    left: 4px;\\n    bottom: 3px;\\n    background-color: white;\\n    transition: 0.4s;\\n    border-radius: 50%;\\n}\\n\\ninput:checked + .slider {\\n    background-color: #4caf50;\\n}\\n\\ninput:checked + .slider:before {\\n    transform: translateX(24px);\\n}\\n\\n.slider.round {\\n    border-radius: 25px;\\n}\\n\\n.slider.round:before {\\n    border-radius: 50%;\\n}\\n\\n#unitLabel {\\n    font-size: 18px;\\n    font-weight: bold;\\n}\\n\\n/* Current Weather */\\n.current-weather {\\n    width: 34rem;\\n    min-height: 2rem;\\n    display: grid;\\n    color: white;\\n    align-items: center;\\n    font-weight: 600;\\n}\\n\\n#loading-container {\\n    justify-self: center;\\n}\\n\\n.giphy-embed {\\n    border-radius: 25px;\\n}\\n\\n.current-weather-error {\\n    justify-self: center;\\n}\\n\\n.grid-on {\\n    grid-template-rows: repeat(6, 2.5rem);\\n    grid-template-columns: 7.5rem repeat(3, 1fr);\\n}\\n\\n.current-icon-container {\\n    grid-area: 1 / 1 / 4 / 2;\\n    justify-self: center;\\n    width: 100%;\\n    height: 100%;\\n    padding-right: 10px;\\n    padding-bottom: 20px;\\n}\\n\\n.current-icon {\\n    width: 100%;\\n    height: auto;\\n}\\n\\n.location-container {\\n    grid-area: 1 / 2 / 2 / -1;\\n    font-weight: 700;\\n}\\n\\n.temp-container {\\n    grid-area: 2 / 2 / 3 / 3;\\n    font-size: 2rem;\\n    font-weight: 700;\\n}\\n\\n.feels-like-container {\\n    grid-area: 2 / 3 / 3 / -1;\\n}\\n\\n.humidity-container {\\n    grid-area: 3 / 2 / 3 / 3;\\n}\\n\\n.precip-container {\\n    grid-area: 3 / 3 / 3 / 4;\\n}\\n\\n.uvindex-container {\\n    grid-area: 3 / 4 / 4 / -1;\\n}\\n\\n.conditions-container {\\n    grid-area: 4 / 1 / 5 / -1;\\n}\\n\\n.description-container {\\n    grid-area: 5 / 1 / 6 / -1;\\n    line-height: 1.2;\\n}\\n\\n.sunrise-container {\\n    grid-area: 6 / 1 / -1 / 3;\\n}\\n\\n.sunset-container {\\n    grid-area: 6 / 3 / -1 / -1;\\n}\\n\\n.hourly-weather {\\n    min-width: 34rem;\\n    min-height: 2rem;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    color: white;\\n    font-weight: 500;\\n}\\n\\n.hidden {\\n    display: none;\\n}\\n\\n#left-button {\\n    margin-right: 1.5rem;\\n    transition: scale 0.3s ease;\\n}\\n\\n#right-button {\\n    margin-left: 1.5rem;\\n    transition: scale 0.3s ease;\\n}\\n\\n#left-button:hover,\\n#right-button:hover {\\n    scale: 1.2;\\n}\\n\\n.carousel-button {\\n    width: 6rem;\\n    background-color: inherit;\\n    border: none;\\n    cursor: pointer;\\n}\\n\\n.arrow-icon {\\n    background-color: inherit;\\n}\\n\\n.carousel-frame {\\n    width: 20rem;\\n    height: 10rem;\\n    overflow: hidden;\\n    position: relative;\\n}\\n\\n.carousel {\\n    display: flex;\\n    overflow: hidden;\\n    position: relative;\\n    width: 160rem;\\n    right: 0rem;\\n}\\n\\n.hour-container {\\n    width: 6.66rem;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    color: white;\\n    font-weight: 600;\\n}\\n\\n.hour-icon {\\n    width: 6.66rem;\\n    height: 6rem;\\n}\\n\\n/* Footer */\\nfooter {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    padding-bottom: 2rem;\\n    font-weight: 500;\\n}\\n\\n.credit {\\n    display: flex;\\n    gap: 0.3rem;\\n}\\n\\nfooter a {\\n    text-decoration: none;\\n    color: var(--blue-ten);\\n    transition: color 0.3s ease;\\n}\\n\\nfooter a:hover {\\n    color: var(--blue-five);\\n}\\n\\n.credit img {\\n    height: 1.2rem;\\n    width: 1.2rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","var map = {\n\t\"./clear-day.png\": 270,\n\t\"./clear-night.png\": 514,\n\t\"./cloudy.png\": 738,\n\t\"./fog.png\": 388,\n\t\"./hail.png\": 492,\n\t\"./partly-cloudy-day.png\": 42,\n\t\"./partly-cloudy-night.png\": 390,\n\t\"./rain-snow-showers-day.png\": 225,\n\t\"./rain-snow-showers-night.png\": 85,\n\t\"./rain-snow.png\": 294,\n\t\"./rain.png\": 184,\n\t\"./showers-day.png\": 376,\n\t\"./showers-night.png\": 532,\n\t\"./sleet.png\": 301,\n\t\"./snow-showers-day.png\": 652,\n\t\"./snow-showers-night.png\": 568,\n\t\"./snow.png\": 763,\n\t\"./thunder-rain.png\": 171,\n\t\"./thunder-showers-day.png\": 261,\n\t\"./thunder-showers-night.png\": 494,\n\t\"./thunder.png\": 386,\n\t\"./wind.png\": 956\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 650;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","const apiKey = \"9WH2H46W682MUWVFB39Q5JZN5\";\n\nfunction getApiUrl(location) {\n    return `https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${location}?key=${apiKey}`;\n}\n\nexport async function getRawWeatherData(location) {\n    try {\n        const apiUrl = getApiUrl(location);\n        const apiResponse = await fetch(apiUrl);\n        if (!apiResponse.ok) {\n            throw new Error(\"Bad Request\");\n        }\n        const rawWeatherData = await apiResponse.json();\n        return rawWeatherData;\n    } catch (error) {\n        console.error(`Could not obtain weather data for ${location},`, error);\n        return null;\n    }\n}\n","let tempFormat = \"fahrenheit\";\n\nexport const getTempFormat = () => tempFormat;\n\nexport function toggleTempFormat() {\n    if (tempFormat === \"fahrenheit\") {\n        tempFormat = \"celcius\";\n    } else if (tempFormat === \"celcius\") {\n        tempFormat = \"fahrenheit\";\n    }\n}\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { constructFrom } from \"../../constructFrom.js\";\nimport { transpose } from \"../../transpose.js\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n\n  constructor(context, reference) {\n    super();\n    this.context = context || ((date) => constructFrom(reference, date));\n  }\n\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, this.context));\n  }\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam InputDate - The input `Date` type derived from the passed argument.\n * @typeParam ResultDate - The result `Date` type derived from the passed constructor.\n *\n * @param date - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(date, constructor) {\n  const date_ = isConstructor(constructor)\n    ? new constructor(0)\n    : constructFrom(constructor, 0);\n  date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n  date_.setHours(\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds(),\n    date.getMilliseconds(),\n  );\n  return date_;\n}\n\nfunction isConstructor(constructor) {\n  return (\n    typeof constructor === \"function\" &&\n    constructor.prototype?.constructor === constructor\n  );\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.js\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.js\";\n\nimport { numericPatterns } from \"./constants.js\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { addDays } from \"./addDays.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const date_ = toDate(date, options?.in);\n  const currentDay = date_.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.js\";\nimport { getISODay } from \"./getISODay.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISODay} function options.\n */\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday, etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day, options) {\n  const date_ = toDate(date, options?.in);\n  const currentDay = getISODay(date_, options);\n  const diff = day - currentDay;\n  return addDays(date_, diff, options);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISODay} function options.\n */\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date, options) {\n  const day = toDate(date, options?.in).getDay();\n  return day === 0 ? 7 : day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { EraParser } from \"./parsers/EraParser.js\";\nimport { YearParser } from \"./parsers/YearParser.js\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.js\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.js\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.js\";\nimport { QuarterParser } from \"./parsers/QuarterParser.js\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.js\";\nimport { MonthParser } from \"./parsers/MonthParser.js\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.js\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.js\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.js\";\nimport { DateParser } from \"./parsers/DateParser.js\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.js\";\nimport { DayParser } from \"./parsers/DayParser.js\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.js\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.js\";\nimport { ISODayParser } from \"./parsers/ISODayParser.js\";\nimport { AMPMParser } from \"./parsers/AMPMParser.js\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.js\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.js\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.js\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.js\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.js\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.js\";\nimport { MinuteParser } from \"./parsers/MinuteParser.js\";\nimport { SecondParser } from \"./parsers/SecondParser.js\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.js\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.js\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.js\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.js\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.js\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.js\";\n\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.js\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigitsSigned } from \"../utils.js\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { parseNDigits } from \"../utils.js\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.js\";\nimport { startOfWeek } from \"../../../startOfWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const date_ = toDate(date, options?.in);\n  const diff = getWeek(date_, options) - week;\n  date_.setDate(date_.getDate() - diff * 7);\n  return toDate(date_, options?.in);\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.js\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setISOWeek} function options.\n */\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The `Date` type of the context function.\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week, options) {\n  const _date = toDate(date, options?.in);\n  const diff = getISOWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.js\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { dayPeriodEnumToHours } from \"../utils.js\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseNDigits, parseNumericPattern } from \"../utils.js\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.js\";\n\nimport { mapValue, parseNDigits } from \"../utils.js\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.js\";\nimport { Parser } from \"../Parser.js\";\n\nimport { parseAnyDigitsSigned } from \"../utils.js\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getDefaultOptions } from \"./getDefaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\nimport { DateTimezoneSetter } from \"./parse/_lib/Setter.js\";\nimport { parsers } from \"./parse/_lib/parsers.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangeably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const invalidDate = () => constructFrom(options?.in || referenceDate, NaN);\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (!formatStr)\n    return dateStr ? invalidDate() : toDate(referenceDate, options?.in);\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will try to use the context or\n  // the reference date and fallback to the system time zone.\n  const setters = [new DateTimezoneSetter(options?.in, referenceDate)];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return invalidDate();\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return invalidDate();\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return invalidDate();\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate, options?.in);\n\n  if (isNaN(+date)) return invalidDate();\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return invalidDate();\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return date;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.js\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { parse, format } from \"date-fns\";\n\nexport function formatTime(rawTime) {\n    const parsedTime = parse(rawTime, \"HH:mm:ss\", new Date());\n    const formattedTime = format(parsedTime, \"h:mma\");\n    return formattedTime;\n}\n","import { getRawWeatherData } from \"./weather-api\";\nimport { getTempFormat } from \"./temp-format\";\nimport { formatTime } from \"./format-time\";\n\nexport async function getCurrentWeather(location) {\n    try {\n        const rawWeatherData = await getRawWeatherData(location);\n        if (!rawWeatherData) {\n            throw new Error(`Could not obtain current weather for ${location}`);\n        }\n        const currentWeather =\n            getTempFormat() === \"fahrenheit\"\n                ? {\n                      dateTime: rawWeatherData.currentConditions.datetime,\n                      searched: rawWeatherData.address,\n                      resolvedAddress: rawWeatherData.resolvedAddress,\n                      description: rawWeatherData.description,\n                      conditions: rawWeatherData.currentConditions.conditions,\n                      temp: `${rawWeatherData.currentConditions.temp}°F`,\n                      feelsLike: `${rawWeatherData.currentConditions.feelslike}°F`,\n                      humidity: rawWeatherData.currentConditions.humidity,\n                      uvIndex: rawWeatherData.currentConditions.uvindex,\n                      icon: rawWeatherData.currentConditions.icon,\n                      precipProb: rawWeatherData.currentConditions.precipprob,\n                      sunrise: formatTime(\n                          rawWeatherData.currentConditions.sunrise\n                      ),\n                      sunset: formatTime(\n                          rawWeatherData.currentConditions.sunset\n                      ),\n                  }\n                : {\n                      dateTime: rawWeatherData.currentConditions.datetime,\n                      searched: rawWeatherData.address,\n                      resolvedAddress: rawWeatherData.resolvedAddress,\n                      description: rawWeatherData.description,\n                      conditions: rawWeatherData.currentConditions.conditions,\n                      temp: `${(((rawWeatherData.currentConditions.temp - 32) * 5) / 9).toFixed(2)}°C`,\n                      feelsLike: `${(((rawWeatherData.currentConditions.feelslike - 32) * 5) / 9).toFixed(2)}°C`,\n                      humidity: rawWeatherData.currentConditions.humidity,\n                      uvIndex: rawWeatherData.currentConditions.uvindex,\n                      icon: rawWeatherData.currentConditions.icon,\n                      precipProb: rawWeatherData.currentConditions.precipprob,\n                      sunrise: formatTime(\n                          rawWeatherData.currentConditions.sunrise\n                      ),\n                      sunset: formatTime(\n                          rawWeatherData.currentConditions.sunset\n                      ),\n                  };\n        return currentWeather;\n    } catch (error) {\n        console.error(error);\n        return null;\n    }\n}\n\nexport async function getHourlyWeather(location) {\n    try {\n        const rawWeatherData = await getRawWeatherData(location);\n        if (!rawWeatherData) {\n            throw new Error(`Could not obtain hourly weather for ${location}`);\n        }\n        const rawHourlyWeatherData = rawWeatherData.days[0].hours;\n        const hourlyWeather = rawHourlyWeatherData.map((hourData) => ({\n            datetime: formatTime(hourData.datetime),\n            conditions: hourData.conditions,\n            temp:\n                getTempFormat() === \"fahrenheit\"\n                    ? `${hourData.temp}°F`\n                    : `${(((hourData.temp - 32) * 5) / 9).toFixed(2)}°C`,\n            feelsLike:\n                getTempFormat() === \"fahrenheit\"\n                    ? `${hourData.feelslike}°F`\n                    : `${(((hourData.feelslike - 32) * 5) / 9).toFixed(2)}°C`,\n            icon: hourData.icon,\n            precipProb: hourData.precipprob,\n        }));\n        return hourlyWeather;\n    } catch (error) {\n        console.error(error);\n        return null;\n    }\n}\n","export function buildCurrentWeatherDisplay() {\n    const currentWeatherContainer = document.querySelector(\".current-weather\");\n    currentWeatherContainer.className = \"current-weather grid-on\";\n\n    const currentIconContaier = document.createElement(\"div\");\n    currentIconContaier.className = \"current-icon-container\";\n    currentWeatherContainer.appendChild(currentIconContaier);\n\n    const locationContainer = document.createElement(\"div\");\n    locationContainer.className = \"location-container\";\n    currentWeatherContainer.appendChild(locationContainer);\n\n    const tempContainer = document.createElement(\"div\");\n    tempContainer.className = \"temp-container\";\n    currentWeatherContainer.appendChild(tempContainer);\n\n    const feelsLikeContainer = document.createElement(\"div\");\n    feelsLikeContainer.className = \"feels-like-container\";\n    currentWeatherContainer.appendChild(feelsLikeContainer);\n\n    const humidityContainer = document.createElement(\"div\");\n    humidityContainer.className = \"humidity-container\";\n    currentWeatherContainer.appendChild(humidityContainer);\n\n    const precipContainer = document.createElement(\"div\");\n    precipContainer.className = \"precip-container\";\n    currentWeatherContainer.appendChild(precipContainer);\n\n    const uvIndexContainer = document.createElement(\"div\");\n    uvIndexContainer.className = \"uvindex-container\";\n    currentWeatherContainer.appendChild(uvIndexContainer);\n\n    const conditionsContainer = document.createElement(\"div\");\n    conditionsContainer.className = \"conditions-container\";\n    currentWeatherContainer.appendChild(conditionsContainer);\n\n    const descriptionContainer = document.createElement(\"div\");\n    descriptionContainer.className = \"description-container\";\n    currentWeatherContainer.appendChild(descriptionContainer);\n\n    const sunriseContainer = document.createElement(\"div\");\n    sunriseContainer.className = \"sunrise-container\";\n    currentWeatherContainer.appendChild(sunriseContainer);\n\n    const sunsetContainer = document.createElement(\"div\");\n    sunsetContainer.className = \"sunset-container\";\n    currentWeatherContainer.appendChild(sunsetContainer);\n}\n\nexport function clearCurrentWeatherDisplay() {\n    const currentWeatherContainer = document.querySelector(\".current-weather\");\n    currentWeatherContainer.innerHTML = \"\";\n    currentWeatherContainer.className = \"current-weather\"; // Removes grid-on class\n}\n","import { displayFromHour } from \"./display-from-hour\";\n\nexport function displayHourlyWeather(hourlyWeather) {\n    const carousel = document.querySelector(\".carousel\");\n    carousel.innerHTML = \"\";\n    displayFromHour();\n\n    hourlyWeather.forEach((hour) => {\n        const { datetime, temp, icon: iconText } = hour;\n        const hourContainer = document.createElement(\"div\");\n        hourContainer.className = \"hour-container\";\n        carousel.appendChild(hourContainer);\n\n        const datetimeDisplay = document.createElement(\"div\");\n        datetimeDisplay.className = \"hour-datetime-display\";\n        datetimeDisplay.textContent = datetime;\n        hourContainer.appendChild(datetimeDisplay);\n\n        const hourIcon = document.createElement(\"img\");\n        const images = require.context(\n            \"../img/dynamic-icons\",\n            false,\n            /\\.(png|jpe?g|svg)$/\n        );\n        function getWeatherIcon(iconName) {\n            return images(`./${iconName}.png`);\n        }\n        hourIcon.src = getWeatherIcon(iconText);\n        hourIcon.className = \"hour-icon\";\n        hourIcon.alt = \"Icon of the weather of this hour\";\n        hourContainer.appendChild(hourIcon);\n\n        const tempDisplay = document.createElement(\"div\");\n        tempDisplay.className = \"hour-temp-display\";\n        tempDisplay.textContent = temp;\n        hourContainer.appendChild(tempDisplay);\n    });\n}\n\nfunction handleRightArrowClick() {\n    const carousel = document.querySelector(\".carousel\");\n    const currentRightStyle = carousel.style.right;\n    if (!currentRightStyle || currentRightStyle === \"0rem\") {\n        carousel.style.right = \"20rem\";\n    }\n    if (currentRightStyle && currentRightStyle !== \"140rem\") {\n        const currentRightStyleNumber = parseFloat(\n            currentRightStyle.match(/\\d+(\\.\\d+)?/)[0]\n        );\n        carousel.style.right = `${currentRightStyleNumber + 20}rem`;\n    }\n}\n\nfunction handleLeftArrowClick() {\n    const carousel = document.querySelector(\".carousel\");\n    const currentRightStyle = carousel.style.right;\n    if (currentRightStyle && currentRightStyle !== \"0rem\") {\n        const currentRightStyleNumber = parseFloat(\n            currentRightStyle.match(/\\d+(\\.\\d+)?/)[0]\n        );\n        carousel.style.right = `${currentRightStyleNumber - 20}rem`;\n    }\n}\n\nexport function attachArrowButtonEventListeners() {\n    const rightArrowButton = document.getElementById(\"right-button\");\n    rightArrowButton.addEventListener(\"click\", handleRightArrowClick);\n\n    const leftArrowButton = document.getElementById(\"left-button\");\n    leftArrowButton.addEventListener(\"click\", handleLeftArrowClick);\n}\n","import leftIconPath from \"../img/left.png\";\nimport rightIconPath from \"../img/right.png\";\nimport { attachArrowButtonEventListeners } from \"./display-hourly-weather\";\n\nexport function buildHourlyWeatherDisplay() {\n    const hourlyWeatherDisplay = document.querySelector(\".hourly-weather\");\n    hourlyWeatherDisplay.className = \"hourly-weather\"; // Remove hidden class\n\n    const leftButton = document.createElement(\"button\");\n    leftButton.type = \"button\";\n    leftButton.className = \"carousel-button\";\n    leftButton.id = \"left-button\";\n    hourlyWeatherDisplay.appendChild(leftButton);\n\n    const leftIcon = document.createElement(\"img\");\n    leftIcon.class = \"arrow-icon\";\n    leftIcon.src = leftIconPath;\n    leftButton.appendChild(leftIcon);\n\n    const carouselFrame = document.createElement(\"div\");\n    carouselFrame.className = \"carousel-frame\";\n    hourlyWeatherDisplay.appendChild(carouselFrame);\n\n    const carousel = document.createElement(\"div\");\n    carousel.className = \"carousel\";\n    carouselFrame.appendChild(carousel);\n\n    const rightButton = document.createElement(\"button\");\n    rightButton.type = \"button\";\n    rightButton.className = \"carousel-button\";\n    rightButton.id = \"right-button\";\n    hourlyWeatherDisplay.appendChild(rightButton);\n\n    const rightIcon = document.createElement(\"img\");\n    rightIcon.class = \"arrow-icon\";\n    rightIcon.src = rightIconPath;\n    rightButton.appendChild(rightIcon);\n\n    attachArrowButtonEventListeners();\n}\n\nexport function clearHourlyWeatherDisplay() {\n    const hourlyWeatherDisplay = document.querySelector(\".hourly-weather\");\n    hourlyWeatherDisplay.innerHTML = \"\";\n    hourlyWeatherDisplay.className = \"hourly-weather\"; // Remove hidden class\n}\n","import {\n    getCurrentWeather,\n    getHourlyWeather,\n} from \"../logic/parse-weather-data\";\nimport {\n    buildCurrentWeatherDisplay,\n    clearCurrentWeatherDisplay,\n} from \"./build-current-weather-display\";\nimport {\n    buildHourlyWeatherDisplay,\n    clearHourlyWeatherDisplay,\n} from \"./build-hourly-weather-display\";\nimport { displayCurrentWeather } from \"./display-current-weather\";\nimport {\n    displayCurrentWeatherError,\n    displayHourlyWeatherError,\n} from \"./display-error\";\nimport { displayHourlyWeather } from \"./display-hourly-weather\";\nimport { displayLoadingGif, hideLoadingGif } from \"./loading-gif\";\n\nconst searchForm = document.getElementById(\"search-form\");\n\nexport async function handleSearchSubmit(event = null) {\n    if (event != null) {\n        event.preventDefault();\n    }\n    try {\n        const formData = new FormData(searchForm);\n        const searchLocation = formData.get(\"search\");\n        displayLoadingGif();\n        const currentWeather = await getCurrentWeather(searchLocation);\n        const hourlyWeather = await getHourlyWeather(searchLocation);\n        hideLoadingGif();\n        if (!currentWeather || !hourlyWeather) {\n            throw new Error(\n                `Cound not obtain weather data for \"${searchLocation}\"`\n            );\n        };\n        clearCurrentWeatherDisplay();\n        buildCurrentWeatherDisplay();\n        clearHourlyWeatherDisplay();\n        buildHourlyWeatherDisplay();\n        displayCurrentWeather(currentWeather);\n        displayHourlyWeather(hourlyWeather);\n        console.log(currentWeather);\n        console.log(hourlyWeather);\n        // Clear search input after search\n        const searchInput = document.getElementById(\"search\");\n        searchInput.value = \"\";\n        searchInput.dataset.searched = \"true\";\n    } catch (error) {\n        console.error(error);\n        const searchInput = document.getElementById(\"search\");\n        searchInput.value = \"\";\n        searchInput.dataset.searched = \"false\";\n        clearCurrentWeatherDisplay();\n        displayCurrentWeatherError(error);\n        clearHourlyWeatherDisplay();\n        displayHourlyWeatherError(\"Could not obtain hourly weather data\");\n    }\n}\n\nexport function attachFormSubmitEventListener() {\n    searchForm.addEventListener(\"submit\", handleSearchSubmit);\n}\n","export function displayLoadingGif() {\n    const loadingContainer = document.getElementById(\"loading-container\");\n    loadingContainer.classList.remove(\"hidden\"); \n}\n\nexport function hideLoadingGif() {\n    const loadingContainer = document.getElementById(\"loading-container\");\n    loadingContainer.classList.add(\"hidden\");\n}","import { formatTime } from \"../logic/format-time\";\n\nexport function displayCurrentWeather(currentWeather) {\n    const currentIconContainer = document.querySelector(\n        \".current-icon-container\"\n    );\n    const locationContainer = document.querySelector(\".location-container\");\n    const tempContainer = document.querySelector(\".temp-container\");\n    const feelsLikeContainer = document.querySelector(\".feels-like-container\");\n    const humidityContainer = document.querySelector(\".humidity-container\");\n    const precipContainer = document.querySelector(\".precip-container\");\n    const uvIndexContainer = document.querySelector(\".uvindex-container\");\n    const conditionsContainer = document.querySelector(\".conditions-container\");\n    const descriptionContainer = document.querySelector(\n        \".description-container\"\n    );\n    const sunriseContainer = document.querySelector(\".sunrise-container\");\n    const sunsetContainer = document.querySelector(\".sunset-container\");\n\n    const currentIconText = currentWeather.icon;\n    const currentIcon = document.createElement(\"img\");\n    const images = require.context(\n        \"../img/dynamic-icons\",\n        false,\n        /\\.(png|jpe?g|svg)$/\n    );\n    function getWeatherIcon(iconName) {\n        return images(`./${iconName}.png`);\n    }\n    currentIcon.src = getWeatherIcon(currentIconText);\n    currentIcon.className = \"current-icon\";\n    currentIcon.alt = \"Icon of current weather\";\n\n    const {\n        dateTime,\n        resolvedAddress: location,\n        temp,\n        feelsLike,\n        humidity,\n        precipProb: precip,\n        uvIndex,\n        conditions,\n        description,\n        sunrise,\n        sunset,\n    } = currentWeather;\n\n    currentIconContainer.innerHTML = \"\"; // Clear previous icon, if any\n    currentIconContainer.appendChild(currentIcon);\n    locationContainer.textContent = location;\n    tempContainer.textContent = temp;\n    feelsLikeContainer.textContent = `Feels Like: ${feelsLike}`;\n    humidityContainer.textContent = `Humidity: ${humidity}`;\n    precipContainer.textContent = `Rain: ${precip}%`;\n    uvIndexContainer.textContent = `UV Index: ${uvIndex}`;\n    conditionsContainer.textContent = `${conditions} (as of ${formatTime(dateTime)})`;\n    descriptionContainer.textContent = description;\n    sunriseContainer.textContent = `Sunrise: ${sunrise}`;\n    sunsetContainer.textContent = `Sunset: ${sunset}`;\n}\n","import { getCurrentWeather } from \"../logic/parse-weather-data\";\n\nexport async function displayFromHour() {\n    const locationContainer = document.querySelector(\".location-container\");\n    const location = locationContainer.textContent;\n    const currentWeather = await getCurrentWeather(location);\n    const currentRawHour = currentWeather.dateTime;\n    const match = currentRawHour.match(/^0?(\\d{1,2})/);\n    const currentHour = match[1];\n\n    const carousel = document.querySelector(\".carousel\");\n    if (currentHour >= 0 && currentHour < 3) {\n        carousel.style.right = \"0rem\";\n    }\n    if (currentHour > 2 && currentHour < 6) {\n        carousel.style.right = \"20rem\";\n    }\n    if (currentHour > 5 && currentHour < 9) {\n        carousel.style.right = \"40rem\";\n    }\n    if (currentHour > 8 && currentHour < 12) {\n        carousel.style.right = \"60rem\";\n    }\n    if (currentHour > 11 && currentHour < 15) {\n        carousel.style.right = \"80rem\";\n    }\n    if (currentHour > 14 && currentHour < 18) {\n        carousel.style.right = \"100rem\";\n    }\n    if (currentHour > 17 && currentHour < 21) {\n        carousel.style.right = \"120rem\";\n    }\n    if (currentHour > 20 && currentHour <= 23) {\n        carousel.style.right = \"140rem\";\n    }\n}\n","export function displayCurrentWeatherError(error) {\n    const currentWeatherError = document.createElement(\"span\");\n    currentWeatherError.className = \"current-weather-error\";\n    currentWeatherError.textContent = error;\n\n    const currentWeatherContainer = document.querySelector(\".current-weather\");\n    currentWeatherContainer.appendChild(currentWeatherError);\n}\n\nexport function displayHourlyWeatherError(error) {\n    const hourlyWeatherError = document.createElement(\"span\");\n    hourlyWeatherError.className = \"hourly-weather-error\";\n    hourlyWeatherError.textContent = error;\n\n    const hourlyWeatherContainer = document.querySelector(\".hourly-weather\");\n    hourlyWeatherContainer.appendChild(hourlyWeatherError);\n}\n","import { toggleTempFormat } from \"../logic/temp-format\";\nimport { handleSearchSubmit } from \"./search-form\";\n\nfunction toggleDisplayTempFormat() {\n    toggleTempFormat();\n    const searchInput = document.getElementById(\"search\");\n    if (searchInput.dataset.searched === \"true\") {\n        const locationContainer = document.querySelector(\".location-container\");\n        searchInput.value = locationContainer.textContent;\n        handleSearchSubmit(null);\n    }\n}\n\nexport function attachToggleEventListener() {\n    const toggleButton = document.getElementById(\"unit-toggle\");\n    toggleButton.addEventListener(\"click\", toggleDisplayTempFormat);\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","keys","Object","resolve","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","key","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","test","replace","p","nc","async","getRawWeatherData","apiUrl","getApiUrl","apiResponse","fetch","ok","json","error","console","locals","tempFormat","getTempFormat","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","String","defaultWidth","formats","formatLong","date","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","value","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","findIndex","object","findKey","valueCallback","rest","slice","parsePattern","parseInt","parseResult","any","enUS","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_date","_baseDate","weekStartsOn","firstWeekContainsDate","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","toLowerCase","message","warn","includes","RangeError","Math","pow","millisecondsInWeek","constructFromSymbol","Symbol","for","constructFrom","Date","constructor","defaultOptions","getDefaultOptions","toDate","argument","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","priority","super","set","flags","DateTimezoneSetter","reference","timestampIsSet","date_","isConstructor","setFullYear","getFullYear","getMonth","getDate","setHours","getHours","getMinutes","getSeconds","getMilliseconds","transpose","Parser","run","dateString","parse","setter","_value","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","trunc","isLeapYearIndex","year","startOfWeek","locale","in","getDay","diff","setDate","getWeekYear","firstWeekOfNextYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","startOfISOWeek","getWeek","firstWeek","startOfWeekYear","round","getISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","isNaN","NaN","setDay","currentDay","delta","setISODay","getISODay","getTimezoneOffsetInMilliseconds","utcDate","UTC","setUTCFullYear","parsers","G","incompatibleTokens","y","isTwoDigitYear","unit","normalizedTwoDigitYear","Y","R","_flags","firstWeekOfYear","u","Q","setMonth","q","M","L","w","week","setWeek","I","setISOWeek","isLeapYear","D","subpriority","E","wholeWeekDays","floor","c","b","B","h","isPM","H","K","hours","m","setMinutes","s","setSeconds","S","setMilliseconds","X","x","t","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dateStr","formatStr","referenceDate","invalidDate","assign","subFnOptions","setters","tokens","substring","firstCharacter","longFormatter","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","incompatibleToken","find","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","startOfDay","getDayOfYear","laterDate","earlierDate","laterDate_","earlierDate_","dates","normalize","bind","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","differenceInCalendarDays","startOfYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","signedYear","dayPeriodEnumValue","numberOfDigits","milliseconds","formatters","signedWeekYear","weekYear","ceil","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","z","offset","delimiter","sign","absOffset","minutes","isValid","matched","formatTime","rawTime","originalDate","parts","isToken","preprocessor","formatterOptions","part","formatter","getCurrentWeather","rawWeatherData","currentConditions","datetime","searched","address","resolvedAddress","description","conditions","temp","feelsLike","feelslike","humidity","uvIndex","uvindex","icon","precipProb","precipprob","sunrise","sunset","toFixed","clearCurrentWeatherDisplay","currentWeatherContainer","innerHTML","className","handleRightArrowClick","carousel","currentRightStyle","right","currentRightStyleNumber","parseFloat","handleLeftArrowClick","clearHourlyWeatherDisplay","hourlyWeatherDisplay","searchForm","getElementById","handleSearchSubmit","event","preventDefault","searchLocation","FormData","classList","currentWeather","hourlyWeather","days","hourData","getHourlyWeather","add","currentIconContaier","locationContainer","tempContainer","feelsLikeContainer","humidityContainer","precipContainer","uvIndexContainer","conditionsContainer","descriptionContainer","sunriseContainer","sunsetContainer","buildCurrentWeatherDisplay","leftButton","type","leftIcon","class","carouselFrame","rightButton","rightIcon","addEventListener","buildHourlyWeatherDisplay","currentIconContainer","currentIconText","currentIcon","images","alt","precip","textContent","displayCurrentWeather","currentHour","displayFromHour","forEach","hour","iconText","hourContainer","datetimeDisplay","hourIcon","tempDisplay","displayHourlyWeather","log","searchInput","dataset","currentWeatherError","displayCurrentWeatherError","hourlyWeatherError","displayHourlyWeatherError"],"sourceRoot":""}